services:

  auth-service:
    image: auth-service-image
    pull_policy: never
    build:
      context: ./apps/services/auth-service
      dockerfile: Dockerfile.dev
      additional_contexts:
        root: ./
      no_cache: true
    #    develop:
    #      watch:
    #        - action: rebuild
    #          path: ./apps/services/auth-service/package.json
    #          target: /app/apps/services/auth-service/package.json
    #        - action: sync
    #          path: ./apps/services/auth-service/src
    #          target: /app/apps/services/auth-service/src
#    ports:
#      - "9229:9229"
#    command:
#      [ "pnpm","run", "--filter", "auth-service","debug" ]
    volumes:
      - ./apps/services/auth-service:/app/apps/services/auth-service
      - /app/node_modules
      - /app/apps/services/auth-service/node_modules
      - ./packages:/app/packages
    environment:
      - NODE_ENV=development
      - PORT=${AUTH_HTTP_PORT}
      - MONGODB_URI=mongodb://host.docker.internal:27017/UserDB
    env_file:
      - ./apps/services/auth-service/.env
    networks:
      - app-network

  user-service:
    image: user-service-image
    pull_policy: never
    build:
      context: ./apps/services/user-service
      dockerfile: Dockerfile.dev
      additional_contexts:
        root: ./
      no_cache: true
    #    develop:
    #      watch:
    #        - action: rebuild
    #          path: ./apps/services/user-service/package.json
    #          target: /app/apps/services/user-service/package.json
    #        - action: sync
    #          path: ./apps/services/user-service/src
    #          target: /app/apps/services/user-service/src
#    ports:
#      - "9221:9221"
#    command:
#      [ "pnpm","run", "--filter", "user-service","debug" ]
    volumes:
      - ./apps/services/user-service:/app/apps/services/user-service
      - /app/node_modules
      - /app/apps/services/auth-service/node_modules
      - ./packages:/app/packages
    environment:
      - NODE_ENV=development
      - PORT=${USER_HTTP_PORT}
      - MONGODB_URI=mongodb://host.docker.internal:27017/UserDB
    env_file:
      - ./apps/services/user-service/.env
    networks:
      - app-network

  #  order-service:
  #    image: order-service-image
  #    build:
  #      context: ./
  #      dockerfile: apps/services/order-service/Dockerfile.dev
  #    volumes:
  #      - ./apps/services/order-service:/app/apps/services/order-service
  #      - /app/node_modules
  #      - /app/apps/services/order-service/node_modules
  #    depends_on:
  #      - user-service
  #    environment:
  #      - NODE_ENV=development
  #      - USER_SERVICE_GRPC_URL=user-service:${USER_GRPC_PORT}
  #      - PORT=${ORDER_HTTP_PORT}
  #    networks:
  #      - app-network

  #  chat-service:
  #    build: apps/services/chat-service
  #    ports:
  #      - "6000:6000"
  #    volumes:
  #      - ./apps/services/chat-service:/app
  #      - /app/node_modules
  #    depends_on:
  #      - user-service

  gateway-server:
    image: gateway-server-image
    pull_policy: never
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile.dev
      additional_contexts:
        root: ./
    ports:
      - "${GATEWAY_HTTP_PORT}:${GATEWAY_HTTP_PORT}"
#      - "9220:9220"
#    command:
#      [ "pnpm","run", "--filter", "gateway-server","debug" ]
    volumes:
      - ./apps/gateway:/app/apps/gateway
      - /app/node_modules
      - /app/apps/services/auth-service/node_modules
      - ./packages:/app/packages
    environment:
      - NODE_ENV=development
      - PORT=${GATEWAY_HTTP_PORT}
      - USER_SERVER_URL=http://user-service:${USER_HTTP_PORT}
      - AUTH_SERVER_URL=http://auth-service:${AUTH_HTTP_PORT}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    env_file:
      - ./apps/gateway/.env
    depends_on:
      - user-service
      - auth-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
