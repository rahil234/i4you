services:

  user-service:
    image: user-service-image
    pull_policy: never
    build:
      context: ./apps/services/user-service
      dockerfile: Dockerfile.dev
      additional_contexts:
        root: ./
      no_cache: true
    develop:
      watch:
        - action: rebuild
          path: ./apps/services/user-service/package.json
          target: /app/apps/services/user-service/package.json
        - action: rebuild
          path: ./apps/services/user-service
          target: /app/apps/services/user-service
        - action: sync
          path: ./apps/services/user-service/src
          target: /app/apps/services/user-service/src
    volumes:
      - ./apps/services/user-service/src:/app/apps/services/user-service/src
      - ./packages:/app/packages
    environment:
      - NODE_ENV=development
      - PORT=${USER_HTTP_PORT}
      - MONGODB_URI=mongodb://host.docker.internal:27017/UserDB
    env_file:
      - ./apps/services/user-service/.env
    networks:
      - app-network

  #  order-service:
  #    image: order-service-image
  #    build:
  #      context: ./
  #      dockerfile: apps/services/order-service/Dockerfile.dev
  #    volumes:
  #      - ./apps/services/order-service:/app/apps/services/order-service
  #      - /app/node_modules
  #      - /app/apps/services/order-service/node_modules
  #    depends_on:
  #      - user-service
  #    environment:
  #      - NODE_ENV=development
  #      - USER_SERVICE_GRPC_URL=user-service:${USER_GRPC_PORT}
  #      - PORT=${ORDER_HTTP_PORT}
  #    networks:
  #      - app-network

  #  chat-service:
  #    build: apps/services/chat-service
  #    ports:
  #      - "6000:6000"
  #    volumes:
  #      - ./apps/services/chat-service:/app
  #      - /app/node_modules
  #    depends_on:
  #      - user-service

  gateway-server:
    image: gateway-server-image
    pull_policy: never
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile.dev
      additional_contexts:
        root: ./
    ports:
      - "${GATEWAY_HTTP_PORT}:${GATEWAY_HTTP_PORT}"
    volumes:
      - ./apps/gateway/src:/app/apps/gateway/src
      - ./packages:/app/packages
    environment:
      - NODE_ENV=development
      - PORT=${GATEWAY_HTTP_PORT}
      - USER_SERVER_URI=http://user-service:${USER_HTTP_PORT}
      - ORDER_SERVICE_URI=http://order-service:${ORDER_HTTP_PORT}
    env_file:
      - ./apps/gateway/.env
    depends_on:
      - user-service
    #      - order-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
