services:
  validate-service:
    image: validate-service-image
    container_name: validate-service
    pull_policy: never
    build:
      context: ./apps/services/validate-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/services/validate-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=${VALIDATE_HTTP_PORT}
      - JWT_SECRET=your_jwt_secret
    env_file:
      - ./apps/services/validate-service/.env
    networks:
      - app-network

  user-service:
    image: user-service-image
    container_name: user-service
    pull_policy: never
    build:
      context: ./apps/services/user-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/services/user-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=${USER_HTTP_PORT}
      - GRPC_PORT=${USER_GRPC_PORT}
      - MONGODB_URI=mongodb://host.docker.internal:27017/I4you-userDB
    env_file:
      - ./apps/services/user-service/.env
    networks:
      - app-network

  auth-service:
    image: auth-service-image
    container_name: auth-service
    pull_policy: never
    build:
      context: ./apps/services/auth-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/services/auth-service:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=${AUTH_HTTP_PORT}
      - APP_URL=https://i4you.local.net
      - USER_GRPC_SERVER_URL=user-service:${USER_GRPC_PORT}
      - MONGODB_URI=mongodb://host.docker.internal:27017/I4you-userDB
    env_file:
      - ./apps/services/auth-service/.env
    depends_on:
      - user-service
    networks:
      - app-network

  media-service:
    image: media-service-image
    container_name: media-service
    pull_policy: never
    build:
      context: ./apps/services/media-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/services/media-service:/app
      - /app/node_modules
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=${MEDIA_HTTP_PORT}
      - USER_GRPC_SERVER_URL=user-service:${USER_GRPC_PORT}
    env_file:
      - ./apps/services/media-service/.env
    networks:
      - app-network

  chat-service:
    image: chat-service-image
    container_name: chat-service
    pull_policy: never
    build:
      context: apps/services/chat-service
      dockerfile: Dockerfile.dev
    environment:
      - PORT=3004
      - MONGO_URI=mongodb://host.docker.internal:27017/I4you-chatDB
    volumes:
      - ./apps/services/chat-service:/app
      - /app/node_modules
    depends_on:
      - user-service
    networks:
      - app-network

  frontend:
    image: frontend-image
    container_name: frontend
    pull_policy: never
    build:
      context: apps/frontend
      dockerfile: Dockerfile
    environment:
      - PORT=3004
      - MONGO_URI=mongodb://host.docker.internal:27017/I4you-chatDB
      - NODE_ENV=development
      - NEXT_PRIVATE_API_URL=https://i4you.local.net
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - NEXT_PRIVATE_JWT_SECRET=your_jwt_secret
    volumes:
      - ./apps/services/chat-service:/app
      - /app/node_modules
    depends_on:
      - user-service
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: i4you-nginx
    volumes:
      - ./apps/nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./apps/nginx/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - validate-service
      - chat-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
