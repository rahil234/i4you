apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-v1
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
      version: v1
  template:
    metadata:
      labels:
        app: user-service
        version: v1
    spec:
      containers:
        - name: user-service
          image: user-service-image:latest
          imagePullPolicy: IfNotPresent
          #          livenessProbe:
          #            httpGet:
          #              path: /health
          #              port: 4002
          #            initialDelaySeconds: 5
          #            periodSeconds: 5
          #            failureThreshold: 3
          #            timeoutSeconds: 2
          ports:
            - containerPort: 4002
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "4002"
            - name: AUTH_SERVER_URL
              value: "http://auth-service:3001"
            - name: USER_SERVER_URL
              value: "http://user-service:3000"
            - name: GRPC_PORT
              value: "50051"
            - name: JWT_SECRET
              value: "your_jwt_secret"
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: MONGODB_URI
            - name: REDIS_HOST
              value: "redis.redis.svc.cluster.local"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              value: "password"

#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: user-service-v2
#  namespace: app
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: user-service
#      version: v2
#  template:
#    metadata:
#      labels:
#        app: user-service
#        version: v2
#    spec:
#      containers:
#        - name: user-service
#          image: user-service-image:latest
#          imagePullPolicy: IfNotPresent
#          #          livenessProbe:
#          #            httpGet:
#          #              path: /health
#          #              port: 4002
#          #            initialDelaySeconds: 5
#          #            periodSeconds: 5
#          #            failureThreshold: 3
#          #            timeoutSeconds: 2
#          ports:
#            - containerPort: 4002
#          env:
#            - name: NODE_ENV
#              value: "production"
#            - name: PORT
#              value: "4002"
#            - name: AUTH_SERVER_URL
#              value: "http://auth-service:3001"
#            - name: USER_SERVER_URL
#              value: "http://user-service:3000"
#            - name: GRPC_PORT
#              value: "50051"
#            - name: JWT_SECRET
#              value: "your_jwt_secret"
#            - name: MONGODB_URI
#              value: "mongodb+srv://rahilsardar234:NOKCk3dcykTN0P32@i4you-cluster.kdpj0cj.mongodb.net/I4You-userDB"
#            - name: REDIS_HOST
#              value: "redis.redis.svc.cluster.local"
#            - name: REDIS_PORT
#              value: "6379"
#            - name: REDIS_PASSWORD
#              value: "password"

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: app
spec:
  type: ClusterIP
  selector:
    app: user-service
  ports:
    - name: http
      port: 4002
      targetPort: 4002
    - name: grpc
      port: 50051
      targetPort: 50051
#---
#apiVersion: networking.istio.io/v1beta1
#kind: VirtualService
#metadata:
#  name: user-service
#  namespace: app
#spec:
#  hosts:
#    - user-service
#  http:
#    - route:
#        - destination:
#            host: user-service
#            subset: v1
#          weight: 80
#        - destination:
#            host: user-service
#            subset: v2
#          weight: 20
#---
#apiVersion: networking.istio.io/v1beta1
#kind: DestinationRule
#metadata:
#  name: user-service
#  namespace: app
#spec:
#  host: user-service
#  subsets:
#    - name: v1
#      labels:
#        version: v1
#    - name: v2
#      labels:
#        version: v2